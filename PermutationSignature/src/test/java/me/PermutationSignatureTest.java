package me;

import org.junit.*;
import static org.junit.Assert.*;

public class PermutationSignatureTest {

    public PermutationSignatureTest() {}

    @Test
    public void permTest() throws Exception {
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6}, PermutationSignature.reconstruct("IIIII"));
        assertArrayEquals(new int[]{2, 1, 3}, PermutationSignature.reconstruct("DI"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 6, 5}, PermutationSignature.reconstruct("IIIID"));
        assertArrayEquals(new int[]{2, 1, 3, 5, 4, 7, 6}, PermutationSignature.reconstruct("DIIDID"));
        assertArrayEquals(new int[]{2, 1}, PermutationSignature.reconstruct("D"));
        assertArrayEquals(new int[]{1, 2}, PermutationSignature.reconstruct("I"));
        assertArrayEquals(new int[]{3, 2, 1}, PermutationSignature.reconstruct("DD"));
        assertArrayEquals(new int[]{2, 1, 3}, PermutationSignature.reconstruct("DI"));
        assertArrayEquals(new int[]{1, 3, 2}, PermutationSignature.reconstruct("ID"));
        assertArrayEquals(new int[]{1, 2, 3}, PermutationSignature.reconstruct("II"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51}, PermutationSignature.reconstruct("IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII"));
        assertArrayEquals(new int[]{51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{2, 1, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 19, 21, 20, 23, 22, 25, 24, 27, 26, 33, 32, 31, 30, 29, 28}, PermutationSignature.reconstruct("DIDIIIDIDIDIDIDIDIIDIDIDIDIDDDDD"));
        assertArrayEquals(new int[]{1, 2, 3, 5, 4, 7, 6, 9, 8, 11, 10, 12, 15, 14, 13, 19, 18, 17, 16, 22, 21, 20, 24, 23, 25, 26, 27, 28, 29, 30, 31}, PermutationSignature.reconstruct("IIIDIDIDIDIIDDIDDDIDDIDIIIIIII"));
        assertArrayEquals(new int[]{1, 3, 2, 4, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 27, 28, 29, 30, 31, 32, 33, 35, 34, 41, 40, 39, 38, 37, 36, 42}, PermutationSignature.reconstruct("IDIIDIDIDIDIDIDDDDDDDDDDDIIIIIIIIDIDDDDDI"));
        assertArrayEquals(new int[]{1, 3, 2, 4, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 27, 28, 29, 30, 31, 32, 33, 35, 34, 41, 40, 39, 38, 37, 36, 47, 46, 45, 44, 43, 42}, PermutationSignature.reconstruct("IDIIDIDIDIDIDIDDDDDDDDDDDIIIIIIIIDIDDDDDIDDDDD"));
        assertArrayEquals(new int[]{1, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50}, PermutationSignature.reconstruct("IDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDID"));
        assertArrayEquals(new int[]{2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51}, PermutationSignature.reconstruct("DIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDIDI"));
        assertArrayEquals(new int[]{1, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 19, 18, 21, 20, 22, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50}, PermutationSignature.reconstruct("IDIDIDIDIDIDIDIDIDIDIIIDIDIDIDIDIDIDIDIDIDIDIDIDID"));
        assertArrayEquals(new int[]{1, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, 17, 16, 19, 18, 21, 20, 22, 23, 25, 24, 27, 26, 29, 28, 31, 30, 33, 32, 35, 34, 39, 38, 37, 36, 41, 40, 43, 42, 45, 44, 47, 46, 49, 48, 51, 50}, PermutationSignature.reconstruct("IDIDIDIDIDIDIDIDIDIDIIIDIDIDIDIDIDIDDDIDIDIDIDIDID"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49}, PermutationSignature.reconstruct("IIIIIIIIIIIIIIDIDIDIIIIIIIIIIDIIIIIIIIIIIIIIIIII"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 15, 18, 17, 20, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 49}, PermutationSignature.reconstruct("IIIIIIIIIIIIIIDIDIDIIIIIIIIIIDIIIIIIIIIIIIIIIIIID"));
        assertArrayEquals(new int[]{2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 19, 18, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}, PermutationSignature.reconstruct("DIIIIIIIIIIIIIIDIDIDIIIIIIIIIIDIIIIIIIIIIIIIIIIII"));
        assertArrayEquals(new int[]{16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 17, 24, 23, 22, 21, 20, 19, 18, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 46, 45}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDIIDDDDDDIDDDDDDDDDDDDDDDDDDDID"));
        assertArrayEquals(new int[]{2, 1, 3, 5, 4, 7, 6, 9, 8, 10, 12, 11, 13, 15, 14}, PermutationSignature.reconstruct("DIIDIDIDIIDIID"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 6, 5, 8, 7, 10, 9, 11, 13, 12, 15, 14, 16, 18, 17}, PermutationSignature.reconstruct("IIIIDIDIDIIDIDIID"));
        assertArrayEquals(new int[]{2, 1, 3, 5, 4, 7, 6, 8, 10, 9, 13, 12, 11, 15, 14, 17, 16}, PermutationSignature.reconstruct("DIIDIDIIDIDDIDID"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 19, 20}, PermutationSignature.reconstruct("IIIIIIIIDIDIDIDIDII"));
        assertArrayEquals(new int[]{1, 5, 4, 3, 2, 7, 6, 8}, PermutationSignature.reconstruct("IDDDIDI"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10, 13, 12, 15, 14, 16, 17, 18, 20, 19, 22, 21, 24, 23, 27, 26, 25, 29, 28}, PermutationSignature.reconstruct("IIIIIIIIIDIDIDIIIIDIDIDIDDID"));
        assertArrayEquals(new int[]{2, 1, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15, 16, 18, 17, 20, 19, 22, 21, 23, 24, 25, 26, 27, 28, 29, 37, 36, 35, 34, 33, 32, 31, 30}, PermutationSignature.reconstruct("DIIIIIIIDIIIIIIIDIDIDIIIIIIIIDDDDDDD"));
        assertArrayEquals(new int[]{2, 1, 3, 6, 5, 4, 7, 8, 10, 9, 12, 11, 17, 16, 15, 14, 13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 30, 29, 28, 35, 34, 33, 32, 36, 37, 38, 39, 40, 41, 43, 42, 45, 44, 47, 46, 49, 48, 50}, PermutationSignature.reconstruct("DIIDDIIIDIDIDDDDIIIIIIIIIIIDDDIDDDIIIIIIIDIDIDIDI"));
        assertArrayEquals(new int[]{1, 5, 4, 3, 2, 6, 10, 9, 8, 7, 14, 13, 12, 11, 18, 17, 16, 15, 23, 22, 21, 20, 19, 24, 26, 25, 28, 27, 35, 34, 33, 32, 31, 30, 29, 36, 42, 41, 40, 39, 38, 37, 44, 43, 47, 46, 45, 50, 49, 48, 51}, PermutationSignature.reconstruct("IDDDIIDDDIDDDIDDDIDDDDIIDIDIDDDDDDIIDDDDDIDIDDIDDI"));
        assertArrayEquals(new int[]{12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 13, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 25, 26, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37}, PermutationSignature.reconstruct("DDDDDDDDDDDIIDDDDDDDDDDIIIDDDDDDDDDIDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 19, 18, 17, 16, 15, 14, 13, 12, 11, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 34, 35, 36, 37, 38, 39, 47, 46, 45, 44, 43, 42, 41, 40, 49, 48}, PermutationSignature.reconstruct("DDDDDDDDDIDDDDDDDDIDDDDDDDDDDDDDIIIIIIIDDDDDDDID"));
        assertArrayEquals(new int[]{6, 5, 4, 3, 2, 1, 8, 7, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 29, 28, 27, 26, 25, 24, 23, 22, 30, 31, 32, 39, 38, 37, 36, 35, 34, 33, 40, 49, 48, 47, 46, 45, 44, 43, 42, 41, 51, 50}, PermutationSignature.reconstruct("DDDDDIDIDDDDDDDDDDDDIDDDDDDDIIIIDDDDDDIIDDDDDDDDID"));
        assertArrayEquals(new int[]{4, 3, 2, 1}, PermutationSignature.reconstruct("DDD"));
        assertArrayEquals(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34}, PermutationSignature.reconstruct("IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIII"));
        assertArrayEquals(new int[]{1, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 19, 20}, PermutationSignature.reconstruct("IDDDDDDDDDDDDDDDDII"));
        assertArrayEquals(new int[]{3, 2, 1, 4}, PermutationSignature.reconstruct("DDI"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 5, 6, 7, 11, 10, 9, 8}, PermutationSignature.reconstruct("DDDIIIIDDD"));
        assertArrayEquals(new int[]{5, 4, 3, 2, 1, 6}, PermutationSignature.reconstruct("DDDDI"));
        assertArrayEquals(new int[]{3, 2, 1, 4, 5, 6, 8, 7, 9, 12, 11, 10, 13, 18, 17, 16, 15, 14, 20, 19, 24, 23, 22, 21}, PermutationSignature.reconstruct("DDIIIIDIIDDIIDDDDIDIDDD"));
        assertArrayEquals(new int[]{30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 31, 32, 33, 34, 35, 36, 37, 38, 39, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDIIIIIIIIIIDDDDDDDDDDD"));
        assertArrayEquals(new int[]{2, 1, 5, 4, 3, 7, 6}, PermutationSignature.reconstruct("DIDDID"));
        assertArrayEquals(new int[]{49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDD"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 8, 7, 6, 5}, PermutationSignature.reconstruct("DDDIDDD"));
        assertArrayEquals(new int[]{6, 5, 4, 3, 2, 1, 7, 8, 9, 10, 16, 15, 14, 13, 12, 11, 17, 18, 19, 20, 26, 25, 24, 23, 22, 21, 27, 28, 29, 30, 36, 35, 34, 33, 32, 31, 37, 38, 39, 40, 46, 45, 44, 43, 42, 41, 47, 48, 49, 50, 51}, PermutationSignature.reconstruct("DDDDDIIIIIDDDDDIIIIIDDDDDIIIIIDDDDDIIIIIDDDDDIIIII"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 5, 6, 7, 11, 10, 9, 8, 12, 13, 14, 15, 23, 22, 21, 20, 19, 18, 17, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36}, PermutationSignature.reconstruct("DDDIIIIDDDIIIIIDDDDDDDIIIIIIIIIIIIIDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{1, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 19, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20}, PermutationSignature.reconstruct("IDDDDDDDDDDDDDDDDIIDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{1, 7, 6, 5, 4, 3, 2, 8, 13, 12, 11, 10, 9, 14, 19, 18, 17, 16, 15, 20, 24, 23, 22, 21, 25, 32, 31, 30, 29, 28, 27, 26, 33, 41, 40, 39, 38, 37, 36, 35, 34, 42, 47, 46, 45, 44, 43, 48, 51, 50, 49}, PermutationSignature.reconstruct("IDDDDDIIDDDDIIDDDDIIDDDIIDDDDDDIIDDDDDDDIIDDDDIIDD"));
        assertArrayEquals(new int[]{3, 2, 1, 5, 4, 6, 8, 7, 9, 16, 15, 14, 13, 12, 11, 10, 17, 18, 19, 20, 21, 26, 25, 24, 23, 22, 27, 28, 31, 30, 29, 33, 32, 34, 36, 35, 39, 38, 37}, PermutationSignature.reconstruct("DDIDIIDIIDDDDDDIIIIIIDDDDIIIDDIDIIDIDD"));
        assertArrayEquals(new int[]{7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDD"));
        assertArrayEquals(new int[]{7, 6, 5, 4, 3, 2, 1, 8, 9, 10, 11, 12, 13, 20, 19, 18, 17, 16, 15, 14, 21, 22, 23, 24, 25, 26, 27, 28, 36, 35, 34, 33, 32, 31, 30, 29, 37, 38, 39, 40, 41, 43, 42, 45, 44, 47, 46, 51, 50, 49, 48}, PermutationSignature.reconstruct("DDDDDDIIIIIIIDDDDDDIIIIIIIIIDDDDDDDIIIIIIDIDIDIDDD"));
        assertArrayEquals(new int[]{15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 41, 40, 39, 38, 37, 43, 44, 45, 46, 47, 48, 49, 50, 51}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDIIIIIIIIIIIIIIIIIIIIIIDDDDDIIIIIIIII"));
        assertArrayEquals(new int[]{50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{1, 7, 6, 5, 4, 3, 2}, PermutationSignature.reconstruct("IDDDDD"));
        assertArrayEquals(new int[]{3, 2, 1, 5, 4, 7, 6, 9, 8, 13, 12, 11, 10, 15, 14, 17, 16, 21, 20, 19, 18, 24, 23, 22, 26, 25, 27, 28, 30, 29, 31, 33, 32, 35, 34, 37, 36, 39, 38, 41, 40, 42, 44, 43, 45, 46, 48, 47, 49, 51, 50}, PermutationSignature.reconstruct("DDIDIDIDIDDDIDIDIDDDIDDIDIIIDIIDIDIDIDIDIIDIIIDIID"));
        assertArrayEquals(new int[]{5, 4, 3, 2, 1, 6, 7, 8, 11, 10, 9, 12, 17, 16, 15, 14, 13, 19, 18, 21, 20, 27, 26, 25, 24, 23, 22}, PermutationSignature.reconstruct("DDDDIIIIDDIIDDDDIDIDIDDDDD"));
        assertArrayEquals(new int[]{2, 1, 6, 5, 4, 3, 7, 9, 8, 10, 16, 15, 14, 13, 12, 11, 17, 18, 25, 24, 23, 22, 21, 20, 19, 26, 29, 28, 27, 33, 32, 31, 30, 35, 34, 39, 38, 37, 36, 41, 40, 42, 44, 43, 48, 47, 46, 45}, PermutationSignature.reconstruct("DIDDDIIDIIDDDDDIIIDDDDDDIIDDIDDDIDIDDDIDIIDIDDD"));
        assertArrayEquals(new int[]{11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 45, 44, 43, 42, 41, 47, 48, 49, 50, 51}, PermutationSignature.reconstruct("DDDDDDDDDDIIIIIIIIIIDDDDDDDDDDIIIIIIIIIIDDDDDIIIII"));
        assertArrayEquals(new int[]{10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 19, 18, 17, 16, 15, 14, 13, 12, 11, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 33, 32, 31, 30, 34, 37, 36, 35, 38, 39, 41, 40, 43, 42, 44, 46, 45, 47}, PermutationSignature.reconstruct("DDDDDDDDDIDDDDDDDDIDDDDDDDDDIDDDIIDDIIIDIDIIDI"));
        assertArrayEquals(new int[]{5, 4, 3, 2, 1, 6, 7, 8, 13, 12, 11, 10, 9}, PermutationSignature.reconstruct("DDDDIIIIDDDD"));
        assertArrayEquals(new int[]{16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{2, 1, 3, 4, 12, 11, 10, 9, 8, 7, 6, 5, 14, 13, 16, 15, 20, 19, 18, 17, 22, 21}, PermutationSignature.reconstruct("DIIIDDDDDDDIDIDIDDDID"));
        assertArrayEquals(new int[]{25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 51, 50, 49, 48, 47, 46, 45, 44, 43}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDIDDDDDDDDDDDDDDDDIDDDDDDDD"));
        assertArrayEquals(new int[]{1, 2, 6, 5, 4, 3, 7}, PermutationSignature.reconstruct("IIDDDI"));
        assertArrayEquals(new int[]{2, 1, 4, 3, 6, 5, 7}, PermutationSignature.reconstruct("DIDIDI"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 5, 6, 7, 11, 10, 9, 8, 13, 12, 15, 14, 20, 19, 18, 17, 16}, PermutationSignature.reconstruct("DDDIIIIDDDIDIDIDDDD"));
        assertArrayEquals(new int[]{50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 51}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDI"));
        assertArrayEquals(new int[]{1, 2, 5, 4, 3, 6}, PermutationSignature.reconstruct("IIDDI"));
        assertArrayEquals(new int[]{2, 1, 3, 7, 6, 5, 4}, PermutationSignature.reconstruct("DIIDDD"));
        assertArrayEquals(new int[]{2, 1, 3, 5, 4, 8, 7, 6, 9, 11, 10, 14, 13, 12, 15, 17, 16, 20, 19, 18, 21, 23, 22, 26, 25, 24, 27, 29, 28, 32, 31, 30, 33, 35, 34, 38, 37, 36, 39, 41, 40, 44, 43, 42, 45, 47, 46}, PermutationSignature.reconstruct("DIIDIDDIIDIDDIIDIDDIIDIDDIIDIDDIIDIDDIIDIDDIID"));
        assertArrayEquals(new int[]{9, 8, 7, 6, 5, 4, 3, 2, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 35, 34, 33, 32, 31, 30, 29, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51}, PermutationSignature.reconstruct("DDDDDDDDIIIIIIIIIIIIIIIIIIIDDDDDDDIIIIIIIIIIIIIIII"));
        assertArrayEquals(new int[]{1, 4, 3, 2, 5, 9, 8, 7, 6, 10, 11, 16, 15, 14, 13, 12, 17, 18, 19, 25, 24, 23, 22, 21, 20, 26, 27, 28, 29, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 51}, PermutationSignature.reconstruct("IDDIIDDDIIIDDDDIIIIDDDDDIIIIIDDDDDDDDDDDDDDDDDDDDI"));
        assertArrayEquals(new int[]{20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{1, 4, 3, 2}, PermutationSignature.reconstruct("IDD"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 5, 10, 9, 8, 7, 6, 11, 15, 14, 13, 12, 16}, PermutationSignature.reconstruct("DDDIIDDDDIIDDDI"));
        assertArrayEquals(new int[]{8, 7, 6, 5, 4, 3, 2, 1, 9, 13, 12, 11, 10, 16, 15, 14, 21, 20, 19, 18, 17}, PermutationSignature.reconstruct("DDDDDDDIIDDDIDDIDDDD"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 5, 6, 10, 9, 8, 7, 11, 12, 16, 15, 14, 13, 17, 18, 22, 21, 20, 19, 23, 24, 28, 27, 26, 25}, PermutationSignature.reconstruct("DDDIIIDDDIIIDDDIIIDDDIIIDDD"));
        assertArrayEquals(new int[]{1, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 31, 30}, PermutationSignature.reconstruct("IDDDDDDDDDDDDIIIIIIIIIIIIIDIID"));
        assertArrayEquals(new int[]{6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDD"));
        assertArrayEquals(new int[]{1, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2}, PermutationSignature.reconstruct("IDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{1, 2, 4, 3, 6, 5, 10, 9, 8, 7, 12, 11, 14, 13, 18, 17, 16, 15, 20, 19, 22, 21, 24, 23, 26, 25, 30, 29, 28, 27, 32, 31, 33, 34, 38, 37, 36, 35, 39, 40, 41, 45, 44, 43, 42, 47, 46, 49, 48, 51, 50}, PermutationSignature.reconstruct("IIDIDIDDDIDIDIDDDIDIDIDIDIDDDIDIIIDDDIIIIDDDIDIDID"));
        assertArrayEquals(new int[]{1, 4, 3, 2, 5}, PermutationSignature.reconstruct("IDDI"));
        assertArrayEquals(new int[]{2, 1, 3, 5, 4, 8, 7, 6, 9, 11, 10, 14, 13, 12, 15, 17, 16, 20, 19, 18, 21, 23, 22, 27, 26, 25, 24, 28, 29, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 41, 42, 43, 44, 45, 46, 47}, PermutationSignature.reconstruct("DIIDIDDIIDIDDIIDIDDIIDIDDDIIIDDDDDDDDDDIIIIIII"));
        assertArrayEquals(new int[]{1, 2, 3, 5, 4, 7, 6, 10, 9, 8, 12, 11, 14, 13, 16, 15, 17, 18, 20, 19, 22, 21, 24, 23, 25, 31, 30, 29, 28, 27, 26, 33, 32, 35, 34, 43, 42, 41, 40, 39, 38, 37, 36, 44, 45, 46, 47, 48, 49, 51, 50}, PermutationSignature.reconstruct("IIIDIDIDDIDIDIDIIIDIDIDIIDDDDDIDIDIDDDDDDDIIIIIIID"));
        assertArrayEquals(new int[]{1, 4, 3, 2, 7, 6, 5, 11, 10, 9, 8, 12, 14, 13, 15, 17, 16, 18, 20, 19, 22, 21, 25, 24, 23}, PermutationSignature.reconstruct("IDDIDDIDDDIIDIIDIIDIDIDD"));
        assertArrayEquals(new int[]{14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 15}, PermutationSignature.reconstruct("DDDDDDDDDDDDDI"));
        assertArrayEquals(new int[]{3, 2, 1, 4, 7, 6, 5, 8, 11, 10, 9, 12, 13}, PermutationSignature.reconstruct("DDIIDDIIDDII"));
        assertArrayEquals(new int[]{1, 5, 4, 3, 2}, PermutationSignature.reconstruct("IDDD"));
        assertArrayEquals(new int[]{31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 32, 33, 34}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDIII"));
        assertArrayEquals(new int[]{2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 15, 14, 13, 16, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 37, 40, 39, 38, 42, 41, 44, 43, 46, 45, 49, 48, 47, 50}, PermutationSignature.reconstruct("DIDIDIDIDIDIDDIIDIDIDIDIDIDIDIDIDIDIIDDIDIDIDIDDI"));
        assertArrayEquals(new int[]{43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"));
        assertArrayEquals(new int[]{3, 2, 1, 6, 5, 4, 7}, PermutationSignature.reconstruct("DDIDDI"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 6, 5, 7}, PermutationSignature.reconstruct("DDDIDI"));
        assertArrayEquals(new int[]{2, 1, 4, 3, 6, 5, 7, 9, 8, 10, 12, 11, 15, 14, 13, 17, 16, 18, 19, 20, 21, 24, 23, 22, 25, 26, 27, 30, 29, 28, 32, 31, 35, 34, 33, 36, 37, 39, 38, 40, 45, 44, 43, 42, 41, 47, 46, 48, 50, 49, 51}, PermutationSignature.reconstruct("DIDIDIIDIIDIDDIDIIIIIDDIIIIDDIDIDDIIIDIIDDDDIDIIDI"));
        assertArrayEquals(new int[]{11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, PermutationSignature.reconstruct("DDDDDDDDDD"));
        assertArrayEquals(new int[]{2, 1, 3, 5, 4, 8, 7, 6}, PermutationSignature.reconstruct("DIIDIDD"));
        assertArrayEquals(new int[]{1, 2, 6, 5, 4, 3, 7, 11, 10, 9, 8, 12, 15, 14, 13, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 26, 27, 28, 30, 29, 31, 35, 34, 33, 32, 38, 37, 36, 43, 42, 41, 40, 39, 44, 45, 46, 47}, PermutationSignature.reconstruct("IIDDDIIDDDIIDDIDDDDDDDDDIIIIDIIDDDIDDIDDDDIIII"));
        assertArrayEquals(new int[]{20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 25, 24, 23, 22, 21, 26, 28, 27, 29, 30, 32, 31, 33, 37, 36, 35, 34, 39, 38, 40, 43, 42, 41, 45, 44, 46, 50, 49, 48, 47, 51}, PermutationSignature.reconstruct("DDDDDDDDDDDDDDDDDDDIDDDDIIDIIIDIIDDDIDIIDDIDIIDDDI"));
        assertArrayEquals(new int[]{4, 3, 2, 1, 8, 7, 6, 5, 9}, PermutationSignature.reconstruct("DDDIDDDI"));
        assertArrayEquals(new int[]{2, 1, 4, 3, 5, 7, 6, 10, 9, 8, 11, 14, 13, 12, 15, 16, 18, 17, 22, 21, 20, 19, 23, 24, 25, 30, 29, 28, 27, 26, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 51}, PermutationSignature.reconstruct("DIDIIDIDDIIDDIIIDIDDDIIIIDDDDIDIDIDIDIDIDIDIDIDIDI"));
    }
}
